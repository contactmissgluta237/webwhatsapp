<?php

declare(strict_types=1);

/**
 * Test d'am√©lioration de prompt WhatsApp
 * 
 * Usage: php test-prompt-enhanced.php
 * 
 * Modifiez la variable $originalPrompt ci-dessous pour tester
 * diff√©rents prompts et voir les r√©sultats d'am√©lioration.
 */

require_once __DIR__ . '/vendor/autoload.php';

// Bootstrap Laravel
$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

// Configuration du prompt √† tester - MODIFIEZ ICI
$originalPrompt = "Tu es un assistant pour Afrik Solutions qui aide les clients avec leurs questions";

echo "\n";
echo "üß™ TEST D'AM√âLIORATION DE PROMPT WHATSAPP";
echo "\n" . str_repeat("=", 60) . "\n";

try {
    // R√©cup√©ration du premier compte WhatsApp
    $account = \App\Models\WhatsAppAccount::first();
    
    if (!$account) {
        echo "‚ùå Erreur: Aucun compte WhatsApp trouv√© dans la base de donn√©es\n";
        echo "   Veuillez d'abord cr√©er un compte WhatsApp ou lancer les seeders\n";
        exit(1);
    }

    echo "üì± Compte WhatsApp: {$account->name} (ID: {$account->id})\n";
    echo "ü§ñ Mod√®le IA configur√©: " . ($account->aiModel ? $account->aiModel->name : 'D√©faut') . "\n";
    echo "\n";

    // Affichage du prompt original
    echo "üìù PROMPT ORIGINAL:\n";
    echo str_repeat("-", 40) . "\n";
    echo $originalPrompt . "\n";
    echo str_repeat("-", 40) . "\n";
    echo "Longueur: " . strlen($originalPrompt) . " caract√®res\n\n";

    // Lancement de l'am√©lioration
    echo "üöÄ Am√©lioration en cours...\n";
    $startTime = microtime(true);
    
    $service = app(\App\Contracts\PromptEnhancementInterface::class);
    $enhancedPrompt = $service->enhancePrompt($account, $originalPrompt);
    
    $endTime = microtime(true);
    $duration = round($endTime - $startTime, 2);

    echo "‚úÖ Am√©lioration termin√©e en {$duration}s\n\n";

    // Affichage du prompt am√©lior√©
    echo "‚ú® PROMPT AM√âLIOR√â:\n";
    echo str_repeat("=", 60) . "\n";
    echo $enhancedPrompt . "\n";
    echo str_repeat("=", 60) . "\n";

    // Statistiques de nettoyage
    echo "\nüìä STATISTIQUES:\n";
    echo "‚Ä¢ Longueur originale: " . strlen($originalPrompt) . " caract√®res\n";
    echo "‚Ä¢ Longueur am√©lior√©e: " . strlen($enhancedPrompt) . " caract√®res\n";
    echo "‚Ä¢ Gain: " . (strlen($enhancedPrompt) - strlen($originalPrompt)) . " caract√®res\n";
    echo "‚Ä¢ Dur√©e: {$duration}s\n";

    // V√©rifications de qualit√©
    echo "\nüîç V√âRIFICATIONS QUALIT√â:\n";
    
    $hasStars = substr_count($enhancedPrompt, '*') > 0;
    $hasEmojis = preg_match('/[‚úÖ‚ùåüî•üí°üì±‚ö°]/u', $enhancedPrompt);
    $hasTitle = stripos($enhancedPrompt, 'prompt') !== false;
    $hasSections = preg_match('/^(R√¥le|Comportement|Gestion|Interdits|Exemple|Note)\s*:/m', $enhancedPrompt);
    $hasMarkdown = preg_match('/\*\*[^*]+\*\*/', $enhancedPrompt);

    echo "‚Ä¢ √âtoiles supprim√©es: " . ($hasStars ? "‚ùå NON" : "‚úÖ OUI") . "\n";
    echo "‚Ä¢ Emojis supprim√©s: " . ($hasEmojis ? "‚ùå NON" : "‚úÖ OUI") . "\n";
    echo "‚Ä¢ Titre supprim√©: " . ($hasTitle ? "‚ùå NON" : "‚úÖ OUI") . "\n";
    echo "‚Ä¢ Sections supprim√©es: " . ($hasSections ? "‚ùå NON" : "‚úÖ OUI") . "\n";
    echo "‚Ä¢ Markdown supprim√©: " . ($hasMarkdown ? "‚ùå NON" : "‚úÖ OUI") . "\n";

    $qualityScore = 0;
    if (!$hasStars) $qualityScore++;
    if (!$hasEmojis) $qualityScore++;
    if (!$hasTitle) $qualityScore++;
    if (!$hasSections) $qualityScore++;
    if (!$hasMarkdown) $qualityScore++;

    echo "\nüéØ SCORE QUALIT√â: {$qualityScore}/5 ";
    if ($qualityScore === 5) {
        echo "üéâ PARFAIT";
    } elseif ($qualityScore >= 3) {
        echo "üëç BON";
    } else {
        echo "‚ö†Ô∏è √Ä AM√âLIORER";
    }
    echo "\n";

    // Instructions pour modifier le test
    echo "\n" . str_repeat("=", 60) . "\n";
    echo "üí° POUR TESTER UN AUTRE PROMPT:\n";
    echo "   1. Modifiez la variable \$originalPrompt ligne 17\n";
    echo "   2. Relancez: php test-prompt-enhanced.php\n";
    echo str_repeat("=", 60) . "\n";

} catch (\Exception $e) {
    echo "\n‚ùå ERREUR LORS DE L'AM√âLIORATION:\n";
    echo "   " . $e->getMessage() . "\n";
    echo "\nüîß V√©rifiez:\n";
    echo "   ‚Ä¢ La base de donn√©es est accessible\n";
    echo "   ‚Ä¢ Les mod√®les IA sont configur√©s\n";
    echo "   ‚Ä¢ Les cl√©s API sont valides\n";
    echo "   ‚Ä¢ La connexion internet fonctionne\n\n";
    exit(1);
}

echo "\n";
